{"version":3,"sources":["components/helpers/removeLocal.js","components/maintenance/UploadImage.js","components/helpers/Ip.js"],"names":["module","exports","removeDataLocalStorage","localStorage","removeItem","IPModule","require","RemoveLocal","UploadImage","props","onChange","e","target","name","value","setState","state","pictures","img","locationToSetup","imgBLOB","message","onDrop","bind","jwt","getjwt","this","history","push","getItem","axios","get","getIP","headers","then","res","data","rows","catch","err","pictureFiles","pictureDataURLs","length","map","image","withIcon","buttonText","imgExtension","label","maxFileSize","pic","style","marginTop","src","width","b64","onsuccess","onerror","Image","onload","canvas","document","createElement","height","getContext","drawImage","toBlob","b64toBlob","blob","url","window","URL","createObjectURL","sentImageToDatabase","error","console","log","teamID","method","color","alt","action","className","showNameImageUpload","showImageUpload","variant","onClick","sendImage","editImage","showMessageUpload","showImageAfterUpload","Component"],"mappings":"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","file":"static/js/24.f7acca97.chunk.js","sourcesContent":["module.exports.removeDataLocalStorage = function(){\r\n    localStorage.removeItem('user')\r\n    localStorage.removeItem( 'user_id')\r\n    localStorage.removeItem('teamproject_ID')\r\n}","import React, { Component } from 'react'\r\nimport Button from 'react-bootstrap/Button';\r\nimport axios from 'axios'\r\nimport { getjwt } from '../helpers/jwt'\r\nimport ImageUploader from \"react-images-upload\"\r\nimport { MDBInput } from \"mdbreact\"\r\nimport Loadable from 'react-loadable'\r\n\r\nvar IPModule = require('../helpers/Ip')\r\nvar RemoveLocal = require('../helpers/removeLocal')\r\nexport default class UploadImage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n              pictures: [] ,\r\n              img : [] ,\r\n              locationToSetup : ' ',\r\n              imgBLOB : null,\r\n              message : null,\r\n            };\r\n        this.onDrop = this.onDrop.bind(this);\r\n      }\r\n\r\n  async componentDidMount(){\r\n        const jwt = getjwt()\r\n        if(!jwt) {\r\n            this.props.history.push('/login')\r\n        }\r\n        const teamID = await localStorage.getItem('teamproject_ID')\r\n        axios.get(`${IPModule.getIP()}:3000/api/v1/posts` , \r\n        { \r\n            headers : { 'x-access-token' : jwt  } \r\n        })\r\n        .then( res => {\r\n            if(res.data.rows[0].data[0].locationToSetup && res.data.rows[0].data[0].imgBLOB){\r\n              this.setState({ \r\n                locationToSetup : res.data.rows[0].data[0].locationToSetup,\r\n                imgBLOB : res.data.rows[0].data[0].imgBLOB\r\n               })\r\n            } else {\r\n              this.setState({ locationToSetup : 'สถานที่ติดตั้ง',  imgBLOB : null })\r\n            }\r\n        }).catch( err => {\r\n            RemoveLocal.removeDataLocalStorage()\r\n            this.props.history.push('/login')\r\n        })\r\n        \r\n    }\r\n\r\n\r\n      onDrop(pictureFiles, pictureDataURLs) {\r\n        this.setState({\r\n          pictures : pictureFiles,\r\n          img : pictureDataURLs,\r\n        });\r\n\r\n      }\r\n\r\n      showNameImageUpload(pictures){\r\n        if(!pictures || pictures.length === 0){\r\n          return (\r\n          <div>\r\n            <p>อัพโหลดรูปภาพ</p>\r\n            <ImageUploader\r\n              withIcon={true}\r\n              buttonText=\"Choose images\"\r\n              onChange={this.onDrop}\r\n              imgExtension={[\".jpg\", \".gif\", \".png\", \".jpeg\", \".gif\"]}\r\n              label={\"Upload image\"}\r\n              maxFileSize={15189789}\r\n            />\r\n          </div>\r\n            )\r\n        } else {\r\n        return  pictures.map( image => {\r\n            return (\r\n                <p>{image.name}</p>\r\n            )\r\n          })\r\n        }\r\n      }\r\n\r\n      showImageUpload(img){\r\n        if(!img || img.length === 0){\r\n\r\n        } else {\r\n        return  img.map( pic => {\r\n            return (\r\n              <li style={{marginTop:'20px'}}>\r\n                <img src={pic} style={{width: '100%'}}/>\r\n              </li>\r\n            )\r\n          })\r\n        }\r\n      }\r\n\r\n      onChange = e => {\r\n        const { name, value } = e.target\r\n        this.setState({\r\n          [name]: value\r\n        })\r\n      }\r\n\r\n      b64toBlob(b64, onsuccess, onerror) {\r\n        var img = new Image();\r\n        img.onerror = onerror;\r\n        img.onload = function onload() {\r\n            var canvas = document.createElement('canvas');\r\n            canvas.width = img.width;\r\n            canvas.height = img.height;\r\n            var ctx = canvas.getContext('2d');\r\n            ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\r\n            canvas.toBlob(onsuccess);\r\n        };\r\n        img.src = b64;\r\n    }\r\n\r\n    async  sendImage(){\r\n      await  this.b64toBlob(this.state.img,\r\n          (blob) => {\r\n                var url = window.URL.createObjectURL(blob);\r\n                this.setState({ imgBLOB : url })\r\n                this.sentImageToDatabase()\r\n          }, (error) => {\r\n              console.log(\"error = \"+error)\r\n          });\r\n\r\n      }\r\n\r\n  async sentImageToDatabase(){\r\n      const teamID = await localStorage.getItem('teamproject_ID')\r\n      const jwt = await getjwt()\r\n        if(!jwt) {\r\n            this.props.history.push('/login')\r\n        }\r\n\r\n        axios({\r\n          method: 'post',\r\n          url: `${IPModule.getIP()}:3000/api/v1/posts/`,\r\n          headers : { 'x-access-token' : jwt  } ,\r\n            data: {\r\n              \"project_pair_key\" : `${teamID}`,\r\n              \"data\" : {\r\n                      \"locationToSetup\" : `${this.state.locationToSetup}`,\r\n                      \"imgBLOB\" : `${this.state.imgBLOB}`\r\n              }\r\n          }\r\n        }).then( res => {\r\n          this.setState({\r\n            message : 'ส่งข้อมูลสำเร็จ'\r\n          })\r\n        }).catch( error => {\r\n\r\n          this.setState({\r\n            message : 'ส่งข้อมูลไม่สำเร็จ'\r\n          })\r\n          \r\n        })\r\n      }\r\n\r\n      showImageAfterUpload(){\r\n        if(this.state.imgBLOB === null){\r\n          return <p style={{color:'red'}} >ยังไม่ได้อัพโหลดรูป</p>\r\n        } else {\r\n          return (\r\n            <div style={{marginTop:'20px'}}>\r\n              <img alt=\"ds\" src={this.state.imgBLOB} style={{width: '100%'}}/>\r\n            </div>\r\n          )\r\n        }\r\n      }\r\n\r\n      editImage(){\r\n      return  this.setState({\r\n          pictures: [] ,\r\n          img : [] ,\r\n          imgBLOB : null\r\n        })\r\n      }\r\n\r\n      showMessageUpload(){\r\n        if(this.state.message){\r\n          if(this.state.message === \"ส่งข้อมูลสำเร็จ\"){\r\n              return <p style={{ marginTop:'3px', color:'green' }} >{this.state.message}</p>\r\n          } else if(this.state.message === \"ส่งข้อมูลไม่สำเร็จ\"){\r\n              return <p style={{ marginTop:'3px', color:'red' }} >{this.state.message}</p>\r\n          } else {\r\n              return <p style={{ marginTop:'3px', color:'red' }} >internet error</p>\r\n          }\r\n        }\r\n\r\n      }\r\n\r\n      render() {\r\n        const { pictures, img, imgBLOB } = this.state\r\n\r\n        return (\r\n          <div>\r\n          \r\n          <div>\r\n          \r\n          <form action=\"\" method=\"post\">\r\n            <MDBInput label={`${this.state.locationToSetup}`} name=\"locationToSetup\" onChange={this.onChange}/>\r\n          </form>\r\n\r\n      {/*  <ImageUploader\r\n        withIcon={true}\r\n        buttonText=\"Choose images\"\r\n        onChange={this.onDrop}\r\n        imgExtension={[\".jpg\", \".gif\", \".png\", \".jpeg\", \".gif\"]}\r\n        label={\"Upload image\"}\r\n        maxFileSize={5242880}\r\n        />\r\n      */}\r\n        \r\n        <ul  className=\"list-inline\">\r\n          {this.showNameImageUpload(pictures)}\r\n          {this.showImageUpload(img)}\r\n        </ul>\r\n\r\n        <div className=\"container-fluid\">\r\n        <Button variant=\"btn btn-block btn-success\" onClick={ () => this.sendImage()}>ส่งรูปภาพ</Button>\r\n          { this.state.imgBLOB != null &&  (<br />) }\r\n          { this.state.imgBLOB != null && (\r\n              <Button variant=\"btn btn-block btn-warning\" onClick={ () => this.editImage()}>แก้ไขรูปภาพ</Button>\r\n          ) }\r\n          <br />\r\n          { this.state.imgBLOB != null &&  (\r\n            this.showMessageUpload()\r\n          //  <p style={{ marginTop:'3px', color:'green'}}>{message}</p>\r\n          ) }\r\n          <br />\r\n        { this.showImageAfterUpload(imgBLOB) }\r\n        </div>\r\n          \r\n        </div>\r\n        </div>\r\n        )\r\n      }\r\n}\r\n","module.exports.getIP = function(){\r\n    return 'http://54.254.61.44'\r\n}"],"sourceRoot":""}