{"version":3,"sources":["image/newFast.svg","image/newLogo.svg","../node_modules/react-bootstrap/esm/Spinner.js","components/Login.js","components/helpers/Ip.js"],"names":["module","exports","Spinner","React","forwardRef","_ref","ref","bsPrefix","variant","animation","size","children","_ref$as","as","Component","className","props","_objectWithoutPropertiesLoose","bsSpinnerPrefix","useBootstrapPrefix","createElement","_extends","classNames","displayName","IPModule","require","Login","state","username","password","spinnerS","message","alertMessage","change","bind","submit","e","this","setState","target","name","value","preventDefault","startSpinnerLoad","axios","post","getIP","then","res","localStorage","setItem","data","token","history","push","stoptSpinnerLoad","catch","error","response","Error","showMessage","setTimeout","widthLabel","width","display","marginLeft","marginRight","alt","src","logo","style","marginBottom","maxWidth","marginTop","onSubmit","TextField","margin","required","fullWidth","type","id","label","autoComplete","autoFocus","onChange","typeof","color","textAlign","Button","backgroundColor","height","role","aria-hidden","NokSoft"],"mappings":"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","file":"static/js/12.d858278b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/newFast.0dbcc048.svg\";","module.exports = __webpack_public_path__ + \"static/media/newLogo.c29196c1.svg\";","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar Spinner = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      animation = _ref.animation,\n      size = _ref.size,\n      children = _ref.children,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"variant\", \"animation\", \"size\", \"children\", \"as\", \"className\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'spinner');\n  var bsSpinnerPrefix = bsPrefix + \"-\" + animation;\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, bsSpinnerPrefix, size && bsSpinnerPrefix + \"-\" + size, variant && \"text-\" + variant)\n  }), children);\n});\nSpinner.displayName = 'Spinner';\nexport default Spinner;","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Button from '@material-ui/core/Button'\r\nimport logo from '../image/newFast.svg'\r\nimport NokSoft from '../image/newLogo.svg'\r\nimport Spinner from 'react-bootstrap/Spinner'\r\nimport LazyLoad from 'react-lazyload'\r\nimport Loadable from 'react-loadable'\r\n\r\nvar IPModule = require('./helpers/Ip')\r\nexport default class Login extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            username : '',\r\n            password : '',\r\n            spinnerS : false,\r\n            message : '',\r\n            alertMessage : false\r\n        }\r\n        this.change = this.change.bind(this)\r\n        this.submit = this.submit.bind(this)\r\n    }\r\n\r\n    change(e){\r\n        this.setState({\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n\r\n    submit(e){\r\n        e.preventDefault()\r\n        this.startSpinnerLoad()\r\n        axios.post(`${IPModule.getIP()}:5001/login` , {\r\n            username : this.state.username,\r\n            password : this.state.password\r\n        })\r\n        .then( res => {\r\n                    localStorage.setItem( 'user' , res.data.token)\r\n                    this.props.history.push('/')\r\n                    this.stoptSpinnerLoad()\r\n        }).catch( error => {\r\n            this.stoptSpinnerLoad()\r\n            this.setState({\r\n                message : error.response.data.Error\r\n            })\r\n            this.showMessage()\r\n        }  )\r\n    }\r\n\r\n    startSpinnerLoad(){\r\n    return    this.setState({\r\n            spinnerS : true\r\n        })\r\n    }\r\n    stoptSpinnerLoad(){\r\n    return    this.setState({\r\n            spinnerS : false\r\n        })\r\n    }\r\n\r\n    showMessage(){\r\n        this.setState({\r\n            alertMessage : true\r\n        })\r\n        if( this.state.alertMessage === true){\r\n                setTimeout(() => {\r\n                    this.setState({\r\n                        alertMessage : false\r\n                    }) \r\n                }, 3000);\r\n        }   \r\n    }\r\n\r\n    render() {\r\n        const { spinnerS, alertMessage, message } = this.state\r\n        const widthLabel = {\r\n            width:'280px',\r\n            display:'block',\r\n            marginLeft:'auto', \r\n            marginRight:'auto'\r\n        }\r\n        \r\n        return (\r\n            <div className=\"container-fluid\">\r\n              <div>\r\n                <LazyLoad>\r\n                    <img alt=\"logo\" src={logo} style={{\r\n                                    marginLeft:'auto', \r\n                                    marginRight:'auto', \r\n                                    display:'block', \r\n                                    marginBottom:'50px' , \r\n                                    maxWidth:'60%',\r\n                                    marginTop:'20%'\r\n                                }}/>\r\n                </LazyLoad>\r\n              </div>\r\n                <form  onSubmit={ e => this.submit(e) }>\r\n                  <TextField\r\n                    style={widthLabel}\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    type=\"id\"\r\n                    id=\"id\"\r\n                    label=\"ID\"\r\n                    autoComplete=\"id\"\r\n                    autoFocus\r\n                    name=\"username\" \r\n                    onChange={ e => this.change(e)} \r\n                    value={this.state.username}\r\n                  />\r\n                  <TextField\r\n                    style={widthLabel}\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    typeof=\"password\"\r\n                    label=\"Password\"\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                    name=\"password\" \r\n                    onChange={ e => this.change(e)} \r\n                    value={this.state.password}\r\n                    autoComplete=\"current-password\"\r\n                  />\r\n                  { alertMessage? \r\n                    <p className=\"text-center\" style={{\r\n                         color:'red', marginTop:'3px', textAlign: 'center'}}>{message}</p> : null\r\n                    }\r\n                  <Button\r\n                  style={{backgroundColor:'#E8DA10', marginTop:'5px', height:' 45px', width:'280px', display:'block',marginLeft:'auto', marginRight:'auto',}}\r\n                    type=\"submit\"\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                  >\r\n                  { spinnerS ? <Spinner\r\n                    as=\"span\"\r\n                    animation=\"border\"\r\n                    size=\"sm\"\r\n                    role=\"status\"\r\n                    aria-hidden=\"true\"\r\n                    style={{marginRight:'5%'}}\r\n                  /> : null\r\n\r\n                   }\r\n                    <span>Sign In</span>\r\n                  </Button>\r\n                </form>\r\n                <div style={{marginTop:\"25%\"}}>\r\n                <LazyLoad>\r\n                <img alt=\"logo\" src={NokSoft} style={{width:\"30%\", marginLeft:'auto', marginRight:'auto', display: \"block\"}} />\r\n                </LazyLoad>\r\n                </div>\r\n            </div>\r\n        \r\n        )\r\n    }\r\n}\r\n","module.exports.getIP = function(){\r\n    return '127.0.0.1'\r\n}\r\n\r\n\r\n\r\n"],"sourceRoot":""}